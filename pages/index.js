import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useState } from 'react'
import { getFunctions } from "firebase/functions";
import { getApp } from '@firebase/app';

export default function Home() {
  const CODEBOOKS = [
    'CA Building Code', 'CA Energy Code', 'CA Existing Building Code',
    'CA Fire Code', 'CA Green Code', 'CA Historic Building Code',
    'CA Plumbing Code'
  ]
  const [selectedCodebooks, setSelectedCodebooks] = useState([]);
  const [query, setQuery] = useState('');
  // const functions = getFunctions(getApp());

  const selectAll = () => {
    if (selectedCodebooks.length === CODEBOOKS.length) {
      setSelectedCodebooks([])
    } else {
      setSelectedCodebooks(CODEBOOKS)
    }
  }

  const selectBook = (e) => {
    if (e.target.checked) {
      setSelectedCodebooks([...selectedCodebooks, e.target.value])
    } else {
      setSelectedCodebooks(selectedCodebooks.filter((cb) => cb !== e.target.value))
    }
  }

  const generateAnswer = () => {
    const QA = functions.httpsCallable('qa-temp');
    QA({codebooks: selectedCodebooks, question: query})
      .then((result) => {console.log(result.data)})
      .catch((error) => {console.log(error)})
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {/* button that changes the preferred color scheme */}
        <button className={styles.colorSchemeButton}
          onClick = {() => {
            if (document.documentElement.getAttribute('data-theme') === 'light') {
              document.documentElement.setAttribute('data-theme', 'dark')
            } else {
              document.documentElement.setAttribute('data-theme', 'light')
            }
          }}
        >
          {/* <Image src="/sun.svg" alt="sun" width={20} height={20} /> */}
          Change color
        </button>
        <h1 className={`${styles.title} ${styles.header}`}>Untitled Codebook Demo</h1>
        <h5 className={`${styles.subtitle} ${styles.header}`}>
          Tools for the <span className={styles.blueSubtext}>Modern Architect</span>
        </h5>
        <div>
          <div className={styles.selectors}>
            <button className={styles.selectAll} onClick={selectAll}>
              {selectedCodebooks.length === CODEBOOKS.length ? 'Unselect All' : 'Select All'}
            </button>
            <div className={styles.codebookSelectors}>
              {
                CODEBOOKS.map((codebook, index) => {
                  return (
                    <div key={index} className={styles.checkbox}>
                      <input 
                        type="checkbox" id={codebook}
                        name={codebook} value={codebook}
                        checked={selectedCodebooks.includes(codebook)}
                        onChange={selectBook}
                      />
                      <label for={codebook}>{codebook}</label>
                    </div>
                  )
                })
              }
            </div>
          </div>
          <div className={styles.queryContainer}>
            <div className={styles.queryBox}>
              <label for="query" className={styles.queryLabel}>Ask a Question</label>
              <div className={styles.queryInputBox}>
                <input 
                  type="text" name="query"
                  placeholder="What's the difference between a second story and a mezzanine?" 
                  className={styles.queryInput} value={query} onChange={(e) => setQuery(e.target.value)}
                />
                <button className={styles.queryButton} onClick={generateAnswer}>Generate Answer</button>
              </div>
            </div>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        
      </footer>
    </div>
  )
}
